####################################
## Factorial(N)
# 1 1 2 6 24 120 720 5040 40320 362880 3628800 39916800 479001600
##########################################################################
## Compute the factorial of the input number (num).
##########################################################################
## Iterate up to a maximum number (to avoid side channel attacks)
## and keep the result of the requested number.
##########################################################################

.pragma k=5 r=17 beta=8
.pragma PQ=239.251
.pragma io=ts incdir=../lib/

.mov _o1 fact                       # fact = 1
.mov _o0 i                          # i = 0
fact_loop:
    .inc i                          # i++
    .omul fact i fact               # fact *= i
    .mov _o0 x                      # x = 0
    .ifneq i num skip               # if i == num:
        .mov _o1 x                  #   x = 1
    skip:
    .omul x fact y                  # result += x * fact // either fact(N) or 0
    .add y result
.ifneq i maxnum fact_loop      # while i != maxnum
.out result
.halt

. num:5  # the factorial number to compute
. maxnum:50 # the maximum factorial the program can compute
. _o0:0
# variables
. i:0 fact:1
. x:0 y:0 result:0

.include "secure.lib"

# factorial(n):
# fact = 1
# for (i = 2; i <= n; i ++):
#   fact *= i;
# print fact
